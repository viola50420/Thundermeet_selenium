# Generated by Selenium IDE
# import pytest
import time
import json
from selenium import webdriver
from selenium.webdriver.common.by import By
from selenium.webdriver.common.action_chains import ActionChains
from selenium.webdriver.support import expected_conditions
from selenium.webdriver.support.wait import WebDriverWait
from selenium.webdriver.common.keys import Keys
from selenium.webdriver.common.desired_capabilities import DesiredCapabilities

class TestUntitled():
  def setup_method(self, method):
    self.driver = webdriver.Chrome()
    self.vars = {}
  
  def teardown_method(self, method):
    self.driver.quit()
  
  def test_untitled(self):
    self.driver.get("https://thundermeet.netlify.app/")
    self.driver.find_element(By.ID, "login_userId").click()
    self.driver.find_element(By.ID, "login_userId").send_keys("1234")
    self.driver.find_element(By.ID, "login_password").click()
    self.driver.find_element(By.ID, "login_password").send_keys("1234")

    self.driver.find_element(By.CSS_SELECTOR, ".ant-btn:nth-child(1) > span").click()


    self.driver.find_element(By.CSS_SELECTOR, "span:nth-child(2)").click()
    self.driver.find_element(By.ID, "eventName").click()
    self.driver.find_element(By.ID, "eventName").send_keys("event")


    # self.driver.find_element(By.CSS_SELECTOR, ".ant-btn > span:nth-child(2)").click()
    # element = self.driver.find_element(By.CSS_SELECTOR, ".ant-btn > span:nth-child(2)")
    # actions = ActionChains(self.driver)
    # actions.move_to_element(element).perform()
    # self.driver.find_element(By.ID, "eventName").click()
    # self.driver.find_element(By.ID, "eventName").send_keys("event")
    self.driver.find_element(By.CSS_SELECTOR, ".ant-picker-input-active > input").click()
    self.driver.find_element(By.CSS_SELECTOR, ".ant-picker-cell-today > .ant-picker-cell-inner").click()
    self.driver.find_element(By.CSS_SELECTOR, "tr:nth-child(5) > .ant-picker-cell-range-hover-end > .ant-picker-cell-inner").click()
    self.driver.find_element(By.CSS_SELECTOR, ".ant-btn-primary > span").click()
    element = self.driver.find_element(By.CSS_SELECTOR, ".ant-btn-primary > span")
    actions = ActionChains(self.driver)
    actions.move_to_element(element).perform()
    element = self.driver.find_element(By.CSS_SELECTOR, "body")
    actions = ActionChains(self.driver)
    actions.move_to_element(element, 0, 0).perform()
    self.driver.find_element(By.CSS_SELECTOR, ".gotit-button > span").click()
  
  def save_html(self, fn = "signup_test_output1.html"):
    self.html = self.driver.execute_script("return document.body.innerHTML")
    with open(fn, 'w', encoding = 'utf-8') as fh:
        fh.write(self.html)

actor = TestUntitled()
actor.setup_method("foo")
actor.test_untitled()
print("Sleep for 5 seconds")
# time.sleep(5)
actor.save_html()
# actor.get_title()
print("all steps completed.")